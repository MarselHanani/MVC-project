// <auto-generated />
using Booky.ADL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booky.ADL.Migrations
{
    [DbContext(typeof(BookyDbContext))]
    [Migration("20231130133223_data")]
    partial class data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Booky.ADL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Math"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("Booky.ADL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author1",
                            CategoryId = 19,
                            Description = "Book1 Description",
                            ISBN = "ISBN1",
                            ImageUrl = "/Images/OIP.jpg",
                            ListPrice = 100.0,
                            Price = 100.0,
                            Price100 = 50.0,
                            Price50 = 70.0,
                            Title = "Book1"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author2",
                            CategoryId = 19,
                            Description = "Book2 Description",
                            ISBN = "ISBN2",
                            ImageUrl = "/Images/OIP.jpg",
                            ListPrice = 200.0,
                            Price = 200.0,
                            Price100 = 150.0,
                            Price50 = 170.0,
                            Title = "Book2"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Author3",
                            CategoryId = 19,
                            Description = "Book3 Description",
                            ISBN = "ISBN3",
                            ImageUrl = "/Images/OIP.jpg",
                            ListPrice = 300.0,
                            Price = 300.0,
                            Price100 = 250.0,
                            Price50 = 270.0,
                            Title = "Book3"
                        });
                });

            modelBuilder.Entity("Booky.ADL.Models.Product", b =>
                {
                    b.HasOne("Booky.ADL.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
